    // Gulp task runner
var gulp = require('gulp'),
    // Plumber is a gulp error handler
    plumber = require('gulp-plumber'),
    // Renders SASS into CSS
    sass = require('gulp-sass'),
    // Utilitiy to send notifications to terminal
    gutil = require('gulp-util'),
    // Concatinates files
    concat = require('gulp-concat'),
    // Used for injecting headers into generated files
    header = require('gulp-header'),
    //Nunjucks for HTML templating
    nunjucks = require('gulp-nunjucks'),
    //Tidy up the HTML output
    prettify = require('gulp-prettify'),
    //Browser sync so you don't have to keep hitting that refresh button
    browserSync = require('browser-sync').create(),
    //Watch files and run tasks on changes
    watch = require('gulp-watch');


//Place to store all path/globs required for tooling
var paths = {
  sass: {
    src: './src/assets/sass/*.scss',
    dest: './build/assets/css/'
  },
  js: {
    src: ['./src/assets/js/modules/*.js', './src/assets/js/main.js'],
    dest: './build/assets/js/'
  },
  html: {
    src: './src/*.html',
    dest: './build/',
    watch : ['./src/*.html', './src/html-partials/*.html']
  }
};

var banner = ['/**',
 '* This is a generated file',
 '* DO NOT EDIT THIS FILE DIRECTLY. To edit this file view the README for instructions.',
 '*/',
 ''].join('\n');



//Set the default task for Gulp
gulp.task('default', ['sass', 'js', 'html', 'watch', 'browser-sync']);

//Render SASS to CSS
gulp.task('sass', function(cb) {

  return gulp.src(paths.sass.src)
  .pipe(plumber({
      errorHandler: onError
    }))
  .pipe(sass())
  .pipe(header(banner))
  .pipe(gulp.dest(paths.sass.dest))
  .pipe(browserSync.stream());

});

// create a task that ensures the `js` task is complete before
// reloading browsers
gulp.task('js-watch', ['js'], browserSync.reload);

//Concat all JS into one file
gulp.task('js', function(cb) {

  return gulp.src(paths.js.src)
  .pipe(plumber({
      errorHandler: onError
    }))
  .pipe(concat('main.js'))
  .pipe(header(banner))
  .pipe(gulp.dest(paths.js.dest))
  .pipe(browserSync.stream());

});

// create a task that ensures the `html` task is complete before
// reloading browsers
gulp.task('html-watch', ['html'], browserSync.reload);

//Compile HTML files
gulp.task('html', function() {
  gulp.src(paths.html.src)
    .pipe(plumber({
      errorHandler: onError
    }))
    .pipe(nunjucks.compile())
    .pipe(prettify({indent_size: 2}))
    .pipe(gulp.dest(paths.html.dest))
    .pipe(browserSync.stream());
});

//Watch for file changes and run tasks accordigly
gulp.task('watch', function(cb) {

  gulp.watch( paths.sass.src, ['sass']);
  gulp.watch( paths.js.src, ['js-watch']);
  gulp.watch( paths.html.watch, ['html-watch']);

});

gulp.task('browser-sync', function() {
  browserSync.init({
      server: {
          baseDir: "./build/"
      }
  });
});


//function to run on any error
var onError = function (err) {
  gutil.beep();
  console.log(err);
  this.emit('end');
};
